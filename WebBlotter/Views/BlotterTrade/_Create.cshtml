@model WebBlotter.Models.SBP_BlotterTrade
@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@* Excel Upload Start *@

<hr />
@using (Html.BeginForm("UploadExcel", "BlotterTrade", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="row">
        <div class="col-md-2">Download Format:</div>
        <div class="col-md-1">
            <a href="~/Content/ExcelSheets/TradeSheet.xlsx">
                <img src="~/Content/images/Excel.ico" width="25" height="25" title="Download Excel format" alt="excel" />
            </a>
        </div>
        <div class="col-md-2">Bulk Upload:</div>
        <div class="col-md-3">
            <input type="file" id="FileUpload" name="postedFile" />
        </div>
        <div class="col-md-2 pull-right">
            <input type="submit" value="Upload" id="btnSubmit" class="btn btn-primary" />
        </div>

    </div>
}


@* End *@

@using (Html.BeginForm("_Create", "BlotterTrade", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <Fieldset>
        <div class="form-horizontal">
            <h2>Create Blotter Trade</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">Select Nostro Bank</label>
                <div class="col-md-10">
                    <select name="BankCode" class="form-control">
                        @if (ViewBag.NostroBanksDDL != null)
                        {
                            foreach (var item in ViewBag.NostroBanksDDL)
                            {
                                <option value="@item.BankCode">@item.BankName.Trim()</option>
                            }
                        }
                    </select>
                </div>
            </div>

            @if (Session["BR"].ToString() != "01")
            {
                <div class="form-group">
                    <label class="control-label col-md-2">Data Type</label>
                    <div class="col-md-10">
                        <select name="DataType" class="form-control">
                            <option value="SBP">State Bank of Pakistan</option>
                            <option value="HBLC">Inter Branch Account</option>
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group" style="display:none;">
                    <label class="control-label col-md-2">Data Type</label>
                    <div class="col-md-10">
                        <select name="DataType" class="form-control">
                            <option value="SBP">State Bank of Pakistan</option>
                        </select>
                    </div>
                </div>
            }

            <div class="form-group">
                <label class="control-label col-md-2">Select Type</label>
                <div class="col-md-10">
                    @*@Html.DropDownListFor(model2 => model2.TTTID, new SelectList(Model.TTTID.ToString(), "datavaluefield", "datatextfield", Model.TTTID))*@
                    <select name="TTID" class="form-control">
                        @foreach (var item in ViewBag.TradeTransactionTitles)
                        {
                            <option value="@item.TTID">@item.TranctionTitle.Trim()</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Trade_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.Trade_Date, new { htmlAttributes = new { @class = "form-control datepicker", @Value = DateTime.Now.ToString("yyyy-MM-dd") } })

                    @Html.ValidationMessageFor(model => model.Trade_Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Trade_InFlow, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Trade_InFlow, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Trade_InFlow, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Trade_OutFLow, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Trade_OutFLow, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Trade_OutFLow, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input class="form-control" type="submit" value="Create" />
                </div>
            </div>
        </div>
    </Fieldset>

}
